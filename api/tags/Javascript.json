{"name":"Javascript","slug":"Javascript","count":3,"postlist":[{"title":"async/await、promise和setTimeout的执行顺序","uid":"e6867a211c96168f16cd6a99706fc29e","slug":"javascript/js_003","date":"2023-06-03T13:08:08.502Z","updated":"2023-06-18T13:17:48.062Z","comments":true,"path":"api/articles/javascript/js_003.json","keywords":null,"cover":"../../images/javascript/js_003_01.png","text":" 你需要提前知道的知识点 1. 什么是进程和线程？ 2. 任务如何调度？ 何为进程？程序运行需要有它自己专属的内存空间，可以把这块内存空间简单的理解为进程，进程是内存分配的最小单位。 每个应用至少有一个进程，进程之间相互独立，即使要通信，也需要双方同意。 何为线程？有了进程后，就...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/categories/Javascript.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/tags/Javascript.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"call()、apply()和bind()的区别和用法","uid":"113d3c4a95b3b3fd262131044de9db93","slug":"javascript/js_002","date":"2023-06-02T15:58:21.739Z","updated":"2023-06-18T12:55:45.251Z","comments":true,"path":"api/articles/javascript/js_002.json","keywords":null,"cover":"../../images/javascript/call-apply-bind.png","text":" 带着问题去理解 1. 这三个方法的作用是什么？ 2. 如何使用，共同点和区别在哪里？ 3. 为什么要使用这些方法？ 4. 方法的使用场景。 前言经常会看到文章有写关于 call() 和 apply() 的一些区别和使用，在学习 react 的时候也遇到用 bind() 这个方法...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/categories/Javascript.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/tags/Javascript.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"apply()和call()的使用","uid":"1ff54552393e0b2b43253a5d68ca54e8","slug":"javascript/js_001","date":"2023-05-23T02:29:30.251Z","updated":"2023-05-24T03:00:49.758Z","comments":true,"path":"api/articles/javascript/js_001.json","keywords":null,"cover":null,"text":"apply()和call()作用call 和 apply 都是为了改变某个函数运行时的 context 即上下文而存在的，换句话说，就是为了改变函数体内部 this 的指向。 方法定义call 和 apply二者的作用完全一样，只是接受参数的方式不太一样。 方法&#x2F;*ap...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/categories/Javascript.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/tags/Javascript.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}