{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"nrm 管理 npm 源","uid":"9f8dfcc48086625af0ae4278580b5a7d","slug":"tools/nrm","date":"2023-06-18T05:56:34.104Z","updated":"2023-06-18T12:57:06.709Z","comments":true,"path":"api/articles/tools/nrm.json","keywords":null,"cover":"../../images/tools/nrm.png","text":"nrm (npm registry manager)是 npm 的镜像源管理工具，有时候国外资源太慢或访问不了，使用这个就可以快速地在 npm 源间切换。 npm 包主要是根据 node 安装的版本来确定使用的版本，而 node 版本也会因为项目的使用而有所限定，所以也会有一个管...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Node","slug":"Node","count":2,"path":"api/categories/Node.json"}],"tags":[{"name":"node","slug":"node","count":2,"path":"api/tags/node.json"},{"name":"nrm","slug":"nrm","count":1,"path":"api/tags/nrm.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"n 管理 node 版本","uid":"8daf5819f3cca3bfa30bc434c8ba2be7","slug":"tools/n","date":"2023-06-18T04:58:39.489Z","updated":"2023-06-18T12:56:45.403Z","comments":true,"path":"api/articles/tools/n.json","keywords":null,"cover":"../../images/tools/n.png","text":"在前端开发的过程中，由于项目的不同和公司设定项目方案的不同，常常会用到不同的 Node 版本，且各个版本的相容程度很差，如果没有版本的管理就需要卸载安装不同版本的Node，这就回很麻烦，所以 Node的版本很管理很重要。 这里给大家介绍一个好用的 Node 版本管理套件 n 支持...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Node","slug":"Node","count":2,"path":"api/categories/Node.json"}],"tags":[{"name":"node","slug":"node","count":2,"path":"api/tags/node.json"},{"name":"n","slug":"n","count":1,"path":"api/tags/n.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"async/await、promise和setTimeout的执行顺序","uid":"e6867a211c96168f16cd6a99706fc29e","slug":"javascript/js_003","date":"2023-06-03T13:08:08.502Z","updated":"2023-06-18T13:17:48.062Z","comments":true,"path":"api/articles/javascript/js_003.json","keywords":null,"cover":"../../images/javascript/js_003_01.png","text":" 你需要提前知道的知识点 1. 什么是进程和线程？ 2. 任务如何调度？ 何为进程？程序运行需要有它自己专属的内存空间，可以把这块内存空间简单的理解为进程，进程是内存分配的最小单位。 每个应用至少有一个进程，进程之间相互独立，即使要通信，也需要双方同意。 何为线程？有了进程后，就...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/categories/Javascript.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/tags/Javascript.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"call()、apply()和bind()的区别和用法","uid":"113d3c4a95b3b3fd262131044de9db93","slug":"javascript/js_002","date":"2023-06-02T15:58:21.739Z","updated":"2023-06-18T12:55:45.251Z","comments":true,"path":"api/articles/javascript/js_002.json","keywords":null,"cover":"../../images/javascript/call-apply-bind.png","text":" 带着问题去理解 1. 这三个方法的作用是什么？ 2. 如何使用，共同点和区别在哪里？ 3. 为什么要使用这些方法？ 4. 方法的使用场景。 前言经常会看到文章有写关于 call() 和 apply() 的一些区别和使用，在学习 react 的时候也遇到用 bind() 这个方法...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/categories/Javascript.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/tags/Javascript.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CSS hack","uid":"58de8212a988128478edd77479cf970b","slug":"css/css_002","date":"2023-05-26T06:48:44.939Z","updated":"2023-06-18T13:11:03.708Z","comments":true,"path":"api/articles/css/css_002.json","keywords":null,"cover":"../../images/css/css_hack.jpg","text":"css hack兼容范围：IE:6.0+，FireFox:2.0+，Opera 10.0+，Sarari 3.0+，Chrome 各浏览器hack兼容一览表 标记 IE6 IE7 IE8 FF Opera Sarari [*+&gt;&lt;] ✔ ✔ ✘ ✘ ✘ ✘ _ ✔ ✘...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"CSS","slug":"CSS","count":2,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":2,"path":"api/tags/CSS.json"},{"name":"CSS HACK","slug":"CSS-HACK","count":1,"path":"api/tags/CSS-HACK.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"你会用ES6，那你到是用啊！","uid":"d4026f51002d22aa52a2d58bbc35f9b0","slug":"es6/es6_001","date":"2023-05-26T02:06:09.343Z","updated":"2023-06-18T13:16:20.149Z","comments":true,"path":"api/articles/es6/es6_001.json","keywords":null,"cover":"../../images/es6/es6.jpg","text":" 之前在 稀土掘金 看到过这样一篇文章 你会用ES6，那你倒是用啊！，觉得作者的写作方法很是幽默，让人看起来不会很是乏味，里面讲解的知识也很是通俗易懂，容易吸收。我这里就直接简单的将作者的原文做一次引用，如果涉及侵权需要删除，可单独联系！ 不是标题党，这是一位leader在一次代...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"ES6","slug":"ES6","count":1,"path":"api/categories/ES6.json"}],"tags":[{"name":"ES6","slug":"ES6","count":1,"path":"api/tags/ES6.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"H5中简单的PDF文件预览","uid":"b2cc4378449d336ad426ce0756b96b31","slug":"plugins/plugin_001","date":"2023-05-24T02:54:44.539Z","updated":"2023-06-18T13:20:45.966Z","comments":true,"path":"api/articles/plugins/plugin_001.json","keywords":null,"cover":"../../images/plugins/pdf5.jpg","text":" 在web页面中预览pdf文件的方式有多种，有的是直接打开，有的是借助不同的封装插件进行预览，这里介绍一个极其简单的预览插件。 使用到的插件 pdfh5 axios 安装npm i pdfh5 --save 导入插件import Pdfh5 from &#39;pdfh5&#39...","link":"","photos":[],"count_time":{"symbolsCount":518,"symbolsTime":"1 mins."},"categories":[{"name":"Plugins","slug":"Plugins","count":1,"path":"api/categories/Plugins.json"}],"tags":[{"name":"pdfh5","slug":"pdfh5","count":1,"path":"api/tags/pdfh5.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JQuery 插件封装","uid":"58f8583587853300427967dcc2c71efb","slug":"jquery/jq_001","date":"2023-05-23T02:35:56.520Z","updated":"2023-06-18T12:56:10.120Z","comments":true,"path":"api/articles/jquery/jq_001.json","keywords":null,"cover":"../../images/jquery/jquery.jpg","text":" jQuery 的开发方式 通过$.extend()来扩展jQuery 通过$.fn向jQuery添加新方法 通过$.widget()应用jQuery UI的部件工厂方式创建 写在哪里写插件一般都是单独的一个文件出来，然后可重复的供他人调用。由于插件依赖的是jQuery，所以在写...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"JQuery","slug":"JQuery","count":1,"path":"api/categories/JQuery.json"}],"tags":[{"name":"JQuery","slug":"JQuery","count":1,"path":"api/tags/JQuery.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"apply()和call()的使用","uid":"1ff54552393e0b2b43253a5d68ca54e8","slug":"javascript/js_001","date":"2023-05-23T02:29:30.251Z","updated":"2023-05-24T03:00:49.758Z","comments":true,"path":"api/articles/javascript/js_001.json","keywords":null,"cover":null,"text":"apply()和call()作用call 和 apply 都是为了改变某个函数运行时的 context 即上下文而存在的，换句话说，就是为了改变函数体内部 this 的指向。 方法定义call 和 apply二者的作用完全一样，只是接受参数的方式不太一样。 方法&#x2F;*ap...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/categories/Javascript.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":3,"path":"api/tags/Javascript.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CSS RESET","uid":"5b87b1e754ccdf31f0f89626f68fdd11","slug":"css/css_001","date":"2023-05-22T12:29:21.397Z","updated":"2023-06-18T13:08:49.523Z","comments":true,"path":"api/articles/css/css_001.json","keywords":null,"cover":"../../images/css/cover_css_reset.jpg","text":"cssreset 有margin值的元素有： body h1 h2 h3 h4 h5 h6 p blockquote pre hr figure dl dd ul ol fieldset menu 有padding值的元素有: ul ol button th td fieldse...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"CSS","slug":"CSS","count":2,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":2,"path":"api/tags/CSS.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2023-05-21T14:17:31.890Z","updated":"2023-06-18T13:24:06.232Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":"../images/hello-world.jpg","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":440,"symbolsTime":"1 mins."},"categories":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/categories/Hexo.json"}],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}],"author":{"name":"Lim Forson","slug":"lim-forson","avatar":"/images/avatar/avatar.png","link":"/","description":"Stay hungry, Stay foolish.","socials":{"github":"https://github.com/linfushan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2151406113","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":7,"tags":14,"word_count":"43k","post_count":11}